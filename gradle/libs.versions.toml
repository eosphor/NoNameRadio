[versions]
agp = "8.7.0"
kotlin = "2.0.0"
downloadTask = "5.6.0"
androidxAppcompat = "1.7.1"
androidxRecyclerView = "1.4.0"
androidxSwipeRefresh = "1.1.0"
material = "1.13.0"
androidxPreference = "1.2.1"
androidxMediaRouter = "1.8.1"
constraintLayout = "2.2.1"
androidxTvProvider = "1.1.0"
androidxTracing = "1.3.0"
multidex = "2.0.1"
okhttp = "4.12.0"
gson = "2.13.1"
media3 = "1.8.0"
glide = "4.16.0"
iconics = "5.4.0"
googleMaterialTypeface = "3.0.1.4.original-kotlin"
communityMaterialTypeface = "5.0.45.1-kotlin"
fileDialogs = "1.0"
javaStringSimilarity = "2.0.0"
fuzzywuzzy = "1.4.0"
materialPopupMenu = "3.4.0"
searchPreference = "v2.3.0"
room = "2.7.2"
lifecycle = "2.9.1"
paging = "3.3.6"
yandexMetrica = "5.3.0"
# Google Play Services
playServicesCast = "21.4.0"
junit4 = "4.13.2"
junitJupiter = "5.13.3"
androidxTestCore = "1.6.1"
androidxTestExtJunit = "1.2.1"
androidxTestRunner = "1.6.2"
espresso = "3.6.1"
uiautomator = "2.3.0"
lingver = "1.3.0"
orchestrator = "1.5.1"
robolectric = "4.11.1"

[libraries]
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
download-task = { module = "de.undercouch:gradle-download-task", version.ref = "downloadTask" }

androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidxAppcompat" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidxRecyclerView" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "androidxSwipeRefresh" }
androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "androidxPreference" }
androidx-mediarouter = { module = "androidx.mediarouter:mediarouter", version.ref = "androidxMediaRouter" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
androidx-tvprovider = { module = "androidx.tvprovider:tvprovider", version.ref = "androidxTvProvider" }
androidx-tracing = { module = "androidx.tracing:tracing", version.ref = "androidxTracing" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "multidex" }
material = { module = "com.google.android.material:material", version.ref = "material" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
media3-exoplayer-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "media3" }
media3-session = { module = "androidx.media3:media3-session", version.ref = "media3" }
media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
media3-datasource-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "media3" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-okhttp-integration = { module = "com.github.bumptech.glide:okhttp3-integration", version.ref = "glide" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }

iconics-core = { module = "com.mikepenz:iconics-core", version.ref = "iconics" }
iconics-views = { module = "com.mikepenz:iconics-views", version.ref = "iconics" }
google-material-typeface = { module = "com.mikepenz:google-material-typeface", version.ref = "googleMaterialTypeface" }
community-material-typeface = { module = "com.mikepenz:community-material-typeface", version.ref = "communityMaterialTypeface" }

file-dialogs = { module = "com.github.rustamg:file-dialogs", version.ref = "fileDialogs" }
java-string-similarity = { module = "info.debatty:java-string-similarity", version.ref = "javaStringSimilarity" }
fuzzywuzzy = { module = "me.xdrop:fuzzywuzzy", version.ref = "fuzzywuzzy" }
material-popup-menu = { module = "com.github.zawadz88:MaterialPopupMenu", version.ref = "materialPopupMenu" }
search-preference = { module = "com.github.ByteHamster:SearchPreference", version.ref = "searchPreference" }

room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-paging = { module = "androidx.room:room-paging", version.ref = "room" }

lifecycle-common-java8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifecycle" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }

paging-runtime-ktx = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging" }

yandex-metrica = { module = "com.yandex.android:mobmetricalib", version.ref = "yandexMetrica" }

junit4 = { module = "junit:junit", version.ref = "junit4" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junitJupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiter" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junitJupiter" }

androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTestCore" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidxTestExtJunit" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "espresso" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxTestRunner" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidxTestCore" }
uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "uiautomator" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
lingver = { module = "com.github.YarikSOffice:lingver", version.ref = "lingver" }
androidx-test-orchestrator = { module = "androidx.test:orchestrator", version.ref = "orchestrator" }

# Mockito for unit testing
mockito-core = { module = "org.mockito:mockito-core", version = "5.12.0" }
mockito-android = { module = "org.mockito:mockito-android", version = "5.12.0" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }

# Google Cast
play-services-cast-framework = { module = "com.google.android.gms:play-services-cast-framework", version.ref = "playServicesCast" }

[bundles]
media3 = ["media3-exoplayer", "media3-exoplayer-hls", "media3-session", "media3-ui", "media3-datasource-okhttp"]
glide = ["glide", "glide-okhttp-integration"]

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
download-task = { id = "de.undercouch.download", version.ref = "downloadTask" }
